repeat wait() until game:IsLoaded()
wait(2)

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local HRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

-- üè¥‚Äç‚ò†Ô∏è Bypass Join Team Pirates
local function joinTeamPirates()
    local remote = ReplicatedStorage:FindFirstChild("Remotes")
    if not remote or not remote:FindFirstChild("TeamSelect") then return end

    for i = 1, 10 do
        if LocalPlayer.Team and LocalPlayer.Team.Name == "Pirates" then
            print("‚úÖ ƒê√£ v√†o Team Pirates!")
            return true
        end
        remote.TeamSelect:InvokeServer("Pirates")
        wait(0.5)
    end

    warn("‚ùå Kh√¥ng th·ªÉ v√†o Team Pirates!")
    return false
end

joinTeamPirates()

-- üé® UI Hi·ªÉn Th·ªã Tr·∫°ng Th√°i
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
local Frame = Instance.new("Frame", ScreenGui)
local FruitStatus = Instance.new("TextLabel", Frame)
local TimerLabel = Instance.new("TextLabel", Frame)

Frame.Size = UDim2.new(0, 350, 0, 80)
Frame.Position = UDim2.new(0.5, -175, 0.05, 0)
Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Frame.BackgroundTransparency = 0.2

FruitStatus.Size = UDim2.new(1, -20, 0, 20)
FruitStatus.Position = UDim2.new(0, 10, 0, 35)
FruitStatus.Text = "Tr·∫°ng th√°i: ƒêang ki·ªÉm tra..."
FruitStatus.TextScaled = true
FruitStatus.TextColor3 = Color3.fromRGB(0, 255, 0) 
FruitStatus.BackgroundTransparency = 1

TimerLabel.Size = UDim2.new(1, -20, 0, 20)
TimerLabel.Position = UDim2.new(0, 10, 0, 55)
TimerLabel.Text = "Hop server sau: 5 gi√¢y"
TimerLabel.TextScaled = true
TimerLabel.TextColor3 = Color3.fromRGB(255, 0, 0) 
TimerLabel.BackgroundTransparency = 1

-- üîç T√¨m tr√°i c√¢y g·∫ßn nh·∫•t
local function findNearestFruit()
    for _, fruit in pairs(Workspace:GetChildren()) do
        if fruit:IsA("Model") and fruit.Name:find("Fruit") and fruit:FindFirstChild("Handle") then
            return fruit
        end
    end
    return nil
end

-- ‚úàÔ∏è Bay ƒë·∫øn tr√°i c√¢y b·∫±ng TweenService + CFrame
local function teleportToFruit(fruit)
    if fruit and fruit:FindFirstChild("Handle") and HRP then
        local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
        local tween = TweenService:Create(HRP, tweenInfo, {CFrame = fruit.Handle.CFrame})
        tween:Play()
        tween.Completed:Wait()
        wait(1)
    end
end

-- üì¶ L∆∞u tr·ªØ tr√°i c√¢y
local function storeFruitInInventory(fruit)
    if fruit and fruit:FindFirstChild("Handle") then
        local args = {fruit.Name, fruit.Handle.Position}
        for attempt = 1, 5 do
            local success, result = pcall(function()
                return ReplicatedStorage.Remotes:FindFirstChild("StoreFruit"):InvokeServer(unpack(args))
            end)
            if success then return true end
            wait(1)
        end
    end
    return false
end

-- üîÑ ƒê·ªïi server sau khi l∆∞u tr·ªØ
local function switchServer()
    for i = 5, 1, -1 do
        TimerLabel.Text = "Hop server sau: " .. i .. " gi√¢y"
        wait(1)
    end
    TeleportService:Teleport(game.PlaceId, LocalPlayer)
end

-- üîÑ Ki·ªÉm tra + Nh·∫∑t tr√°i c√¢y
local function checkAndPickFruit()
    local fruit = findNearestFruit()

    if fruit then
        FruitStatus.Text = "Tr·∫°ng th√°i: ƒê√£ T√¨m Th·∫•y Fruit! " .. fruit.Name
        teleportToFruit(fruit)
        wait(1)
        
        if storeFruitInInventory(fruit) then
            FruitStatus.Text = "‚úÖ ƒê√£ l∆∞u tr·ªØ Fruit!"
            switchServer()
        else
            FruitStatus.Text = "‚ùå Kh√¥ng th·ªÉ l∆∞u Fruit!"
            wait(2)
        end
    else
        FruitStatus.Text = "Tr·∫°ng th√°i: Kh√¥ng c√≥ Fruit!"
        switchServer()
    end
end

checkAndPickFruit()
